module.exports = Object.freeze({
    GAME_FORMAT_RANKED: Symbol.for('ranked'),
    GAME_FORMAT_VERSUS_BOT: Symbol.for('versusBot'),
    GAME_FORMAT_VERSUS: Symbol.for('versus'),
    GAME_FORMAT_EVENT: Symbol.for('event'),
    GAME_FORMAT_CASUAL: Symbol.for('casual'),

    END_CONDITION_RESIGN: Symbol.for('resign'),
    END_CONDITION_ELIMINATION: Symbol.for('elimination'),
    END_CONDITION_DEFEATED: Symbol.for('defeated'),
    END_CONDITION_REPETITION: Symbol.for('repetition'),
    END_CONDITION_DISCONNECT: Symbol.for('disconnect'),
    END_CONDITION_DOUBLE_DISCONNECT: Symbol.for('doubleDisconnect'),

    REPLAY_COMMAND_CLICK_UNIT: Symbol.for('commandClickUnit'),
    REPLAY_COMMAND_SHIFT_CLICK_UNIT: Symbol.for('commandShiftClickUnit'),
    REPLAY_COMMAND_CLICK_BLUEPRINT: Symbol.for('commandClickBlueprint'),
    REPLAY_COMMAND_SHIFT_CLICK_BLUEPRINT: Symbol.for('commandShiftClickBlueprint'),
    REPLAY_COMMAND_CLICK_SPACE: Symbol.for('commandClickSpace'),
    REPLAY_COMMAND_CLICK_REVERT: Symbol.for('commandClickRevert'),
    REPLAY_COMMAND_CLICK_UNDO: Symbol.for('commandClickUndo'),
    REPLAY_COMMAND_CLICK_REDO: Symbol.for('commandClickRedo'),
    REPLAY_COMMAND_CANCEL_TARGETING: Symbol.for('commandCancelTargeting'),
    REPLAY_COMMAND_END_COMBINED_ACTION: Symbol.for('commandEndCombinedAction'),
    REPLAY_COMMAND_EMOTE: Symbol.for('commandEmote'),

    ACTION_ASSIGN_DEFENSE: Symbol.for('actionAssignDefense'),
    ACTION_CANCEL_ASSIGN_DEFENSE: Symbol.for('actionCancelAssignDefense'),
    ACTION_END_DEFENSE: Symbol.for('actionEndDefense'),
    ACTION_SELECT_FOR_TARGETING: Symbol.for('actionSelectForTargeting'),
    ACTION_CANCEL_TARGETING: Symbol.for('actionCancelTargeting'),
    ACTION_USE_ABILITY: Symbol.for('actionUseAbility'),
    ACTION_CANCEL_USE_ABILITY: Symbol.for('actionCancelUseAbility'),
    ACTION_PURCHASE: Symbol.for('actionPurchase'),
    ACTION_CANCEL_PURCHASE: Symbol.for('actionCancelPurchase'),
    ACTION_PROCEED_TO_DAMAGE: Symbol.for('actionProceedToDamage'),
    ACTION_OVERRUN_DEFENSES: Symbol.for('actionOverrunDefenses'),
    ACTION_CANCEL_OVERRUN_DEFENSES: Symbol.for('actionCancelOverrunDefenses'),
    ACTION_ASSIGN_ATTACK: Symbol.for('actionAssignAttack'),
    ACTION_CANCEL_ASSIGN_ATTACK: Symbol.for('actionCancelAssignAttack'),
    ACTION_END_TURN: Symbol.for('actionEndTurn'),
    ACTION_COMMIT_TURN: Symbol.for('actionCommitTurn'),
    ACTION_UNDO: Symbol.for('actionUndo'),
    ACTION_REDO: Symbol.for('actionRedo'),
    ACTION_REVERT: Symbol.for('actionRevert'),
});
